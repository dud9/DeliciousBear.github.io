<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>linux总结</title>
    <link href="/2021/06/12/linux%E6%80%BB%E7%BB%93/"/>
    <url>/2021/06/12/linux%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<hr><p>linux 操作大全,哈哈哈哈~</p><span id="more"></span><h3 id="准则-linux中没有错误就是成功"><a href="#准则-linux中没有错误就是成功" class="headerlink" title="准则: linux中没有错误就是成功"></a><font color="blue">准则: linux中没有错误就是成功</font></h3><h3 id="1-开关机"><a href="#1-开关机" class="headerlink" title="1.开关机"></a>1.开关机</h3><ul><li><p>sync 关机前 将内存中的数据写入磁盘</p></li><li><p>shutdown  -h now 现在强制关机</p></li><li><p>shutdown -h 10  10分钟后关机</p></li><li><p>shutdown -r now 立即重启</p></li><li><p>shutdown -r +10 10分钟后重启</p></li><li><p>reboot 重启 等于shutdown -r now</p></li><li><p>halt 关闭系统  等于 shutdown -h now 和 poweroff</p></li></ul><h3 id="2-目录相关操作"><a href="#2-目录相关操作" class="headerlink" title="2.目录相关操作"></a>2.目录相关操作</h3><p><font color="red"> <strong>1.一切皆为文件</strong></font></p><p><font color="red"><strong>2.根目录 / ,所有文件都挂载在这个节点下</strong></font></p><ul><li><p><strong>ls /</strong>   </p><p>查看目录下的所有文件</p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/ls.png" alt="示例1"></p></li><li><p>ls: 列出目录</p></li><li><p>cd：切换目录</p></li><li><p>pwd：显示目前的目录</p></li><li><p>mkdir：创建一个新的目录</p></li><li><p>rmdir：删除一个空的目录</p></li><li><p>cp: 复制文件或目录</p></li><li><p>rm: 移除文件或目录</p></li><li><p>mv: 移动文件与目录，或修改文件与目录的名称</p></li><li><p>你可以使用 <em>man [命令]</em> 来查看各个命令的使用文档，如 ：man cp</p></li></ul><blockquote><p>ls （列出目录）</p></blockquote><p>在Linux系统当中， ls 命令可能是最常被运行的。</p><p>语法：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@www</span> ~]<span class="hljs-meta"># ls [-aAdfFhilnrRSt] 目录名称</span><br></code></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-a ：全部的文件，连同隐藏文件( 开头为 . 的文件) 一起列出来(常用)</li><li>-l ：长数据串列出，包含文件的属性与权限等等数据；(常用)</li></ul><p>将目录下的所有文件列出来(含属性与隐藏档)</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@www</span> ~]<span class="hljs-meta"># ls -al ~</span><br></code></pre></td></tr></table></figure><blockquote><p>cd （切换目录）</p></blockquote><p>cd是Change Directory的缩写，这是用来变换工作目录的命令。</p><p>语法：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span><span class="hljs-meta"> [相对路径或绝对路径]</span><br></code></pre></td></tr></table></figure><p>测试：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 切换到用户目录下</span><br>[root<span class="hljs-symbol">@kuangshen</span> /]<span class="hljs-meta"># cd home  </span><br><br><span class="hljs-meta"># 使用 mkdir 命令创建 kuangstudy 目录</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># mkdir kuangstudy</span><br><br><span class="hljs-meta"># 进入 kuangstudy 目录</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># cd kuangstudy</span><br><br><span class="hljs-meta"># 回到上一级</span><br>[root<span class="hljs-symbol">@kuangshen</span> kuangstudy]<span class="hljs-meta"># cd ..</span><br><br><span class="hljs-meta"># 回到根目录</span><br>[root<span class="hljs-symbol">@kuangshen</span> kuangstudy]<span class="hljs-meta"># cd /</span><br><br><span class="hljs-meta"># 表示回到自己的家目录，亦即是 /root 这个目录</span><br>[root<span class="hljs-symbol">@kuangshen</span> kuangstudy]<span class="hljs-meta"># cd ~</span><br></code></pre></td></tr></table></figure><p>接下来大家多操作几次应该就可以很好的理解 cd 命令的。</p><blockquote><p>pwd ( 显示目前所在的目录 )</p></blockquote><p>pwd 是 <strong>Print Working Directory</strong> 的缩写，也就是显示目前所在目录的命令。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[root@kuangshen kuangstudy]</span><span class="hljs-selector-id">#pwd</span> <span class="hljs-selector-attr">[-P]</span><br></code></pre></td></tr></table></figure><p>选项与参数：**-P** ：显示出确实的路径，而非使用连接(link) 路径。</p><p>测试：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 单纯显示出目前的工作目录</span><br>[root<span class="hljs-symbol">@kuangshen</span> ~]<span class="hljs-meta"># pwd</span><br>/root<br><br><span class="hljs-meta"># 如果是链接，要显示真实地址，可以使用 -P参数</span><br>[root<span class="hljs-symbol">@kuangshen</span> /]<span class="hljs-meta"># cd bin</span><br>[root<span class="hljs-symbol">@kuangshen</span> bin]<span class="hljs-meta"># pwd -P</span><br>/usr/bin<br></code></pre></td></tr></table></figure><blockquote><p>mkdir （创建新目录）</p></blockquote><p>如果想要创建新的目录的话，那么就使用mkdir (make directory)吧。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir [-mp] 目录名称<br></code></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～</li><li>-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！</li></ul><p>测试：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment"># 进入我们用户目录下</span><br>[root@kuangshen /]<span class="hljs-comment"># cd /home</span><br><br><span class="hljs-comment"># 创建一个 test 文件夹</span><br>[root@kuangshen home]<span class="hljs-comment"># mkdir test</span><br><br><span class="hljs-comment"># 创建多层级目录</span><br>[root@kuangshen home]<span class="hljs-comment"># mkdir test1/test2/test3/test4</span><br>mkdir: cannot create directory ‘test1/test2/test3/test4’:<br>No such file or directory  <span class="hljs-comment"># &lt;== 没办法直接创建此目录啊！</span><br><br><span class="hljs-comment"># 加了这个 -p 的选项，可以自行帮你创建多层目录！</span><br>[root@kuangshen home]<span class="hljs-comment"># mkdir -p test1/test2/test3/test4</span><br><br><span class="hljs-comment"># 创建权限为 rwx--x--x 的目录。</span><br>[root@kuangshen home]<span class="hljs-comment"># mkdir -m 711 test2</span><br>[root@kuangshen home]<span class="hljs-comment"># ls -l</span><br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root <span class="hljs-number"> 4096 </span>Mar<span class="hljs-number"> 12 </span>21:55 test<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root <span class="hljs-number"> 4096 </span>Mar<span class="hljs-number"> 12 </span>21:56 test1<br>drwx--x--x<span class="hljs-number"> 2 </span>root root <span class="hljs-number"> 4096 </span>Mar<span class="hljs-number"> 12 </span>21:58 test2<br></code></pre></td></tr></table></figure><blockquote><p>rmdir ( 删除空的目录 )</p></blockquote><p>语法：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">rmdir [-p] 目录名称<br></code></pre></td></tr></table></figure><p>选项与参数：**-p ：**连同上一级『空的』目录也一起删除</p><p>测试：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment"># 看看有多少目录存在？</span><br>[root@kuangshen home]<span class="hljs-comment"># ls -l</span><br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root <span class="hljs-number"> 4096 </span>Mar<span class="hljs-number"> 12 </span>21:55 test<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root <span class="hljs-number"> 4096 </span>Mar<span class="hljs-number"> 12 </span>21:56 test1<br>drwx--x--x<span class="hljs-number"> 2 </span>root root <span class="hljs-number"> 4096 </span>Mar<span class="hljs-number"> 12 </span>21:58 test2<br><br><span class="hljs-comment"># 可直接删除掉，没问题</span><br>[root@kuangshen home]<span class="hljs-comment"># rmdir test</span><br><br><span class="hljs-comment"># 因为尚有内容，所以无法删除！</span><br>[root@kuangshen home]<span class="hljs-comment"># rmdir test1</span><br>rmdir: failed to remove ‘test1’: Directory not empty<br><br><span class="hljs-comment"># 利用 -p 这个选项，立刻就可以将 test1/test2/test3/test4 依次删除。</span><br>[root@kuangshen home]<span class="hljs-comment"># rmdir -p test1/test2/test3/test4</span><br></code></pre></td></tr></table></figure><p>注意：这个 rmdir 仅能删除空的目录，你可以使用 rm 命令来删除非空目录，后面我们会将！</p><blockquote><p>cp ( 复制文件或目录 )</p></blockquote><p>语法：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[root@www ~]</span># <span class="hljs-selector-tag">cp</span> <span class="hljs-selector-attr">[-adfilprsu]</span> 来源档(source) 目标档(destination)<br><span class="hljs-selector-attr">[root@www ~]</span># <span class="hljs-selector-tag">cp</span> <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-tag">source1</span> <span class="hljs-selector-tag">source2</span> <span class="hljs-selector-tag">source3</span> .... <span class="hljs-selector-tag">directory</span><br></code></pre></td></tr></table></figure><p>选项与参数：</p><ul><li><strong>-a：</strong>相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)</li><li><strong>-p：</strong>连同文件的属性一起复制过去，而非使用默认属性(备份常用)；</li><li><strong>-d：</strong>若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；</li><li><strong>-r：</strong>递归持续复制，用於目录的复制行为；(常用)</li><li><strong>-f：</strong>为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；</li><li><strong>-i：</strong>若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)</li><li><strong>-l：</strong>进行硬式连结(hard link)的连结档创建，而非复制文件本身。</li><li><strong>-s：</strong>复制成为符号连结档 (symbolic link)，亦即『捷径』文件；</li><li><strong>-u：</strong>若 destination 比 source 旧才升级 destination ！</li></ul><p>测试：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 找一个有文件的目录，我这里找到 root目录</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># cd /root</span><br>[root<span class="hljs-symbol">@kuangshen</span> ~]<span class="hljs-meta"># ls</span><br>install.sh<br>[root<span class="hljs-symbol">@kuangshen</span> ~]<span class="hljs-meta"># cd /home</span><br><br><span class="hljs-meta"># 复制 root目录下的install.sh 到 home目录下</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># cp /root/install.sh /home</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># ls</span><br>install.sh<br><br><span class="hljs-meta"># 再次复制，加上-i参数，增加覆盖询问？</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># cp -i /root/install.sh /home</span><br>cp: overwrite ‘/home/install.sh’? y <span class="hljs-meta"># n不覆盖，y为覆盖</span><br></code></pre></td></tr></table></figure><blockquote><p>rm ( 移除文件或目录 )</p></blockquote><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">rm <span class="hljs-selector-attr">[-fir]</span> 文件或目录<br></code></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</li><li>-i ：互动模式，在删除前会询问使用者是否动作</li><li>-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</li></ul><p>测试：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-comment"># 将刚刚在 cp 的实例中创建的 install.sh删除掉！</span><br>[root@kuangshen home]<span class="hljs-comment"># rm -i install.sh</span><br>rm: <span class="hljs-keyword">remove</span> regular <span class="hljs-keyword">file</span> ‘<span class="hljs-keyword">install</span>.sh’? y<br><span class="hljs-comment"># 如果加上 -i 的选项就会主动询问喔，避免你删除到错误的档名！</span><br><br><span class="hljs-comment"># 尽量不要在服务器上使用 rm -rf /</span><br></code></pre></td></tr></table></figure><blockquote><p>mv  ( 移动文件与目录，或修改名称 )</p></blockquote><p>语法：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@www</span> ~]<span class="hljs-meta"># mv [-fiu] source destination</span><br>[root<span class="hljs-symbol">@www</span> ~]<span class="hljs-meta"># mv [options] source1 source2 source3 .... directory</span><br></code></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</li><li>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</li><li>-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)</li></ul><p>测试：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 复制一个文件到当前目录</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># cp /root/install.sh /home</span><br><br><span class="hljs-meta"># 创建一个文件夹 test</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># mkdir test</span><br><br><span class="hljs-meta"># 将复制过来的文件移动到我们创建的目录，并查看</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># mv install.sh test</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># ls</span><br>test<br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># cd test</span><br>[root<span class="hljs-symbol">@kuangshen</span> test]<span class="hljs-meta"># ls</span><br>install.sh<br><br><span class="hljs-meta"># 将文件夹重命名，然后再次查看！</span><br>[root<span class="hljs-symbol">@kuangshen</span> test]<span class="hljs-meta"># cd ..</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># mv test mvtest</span><br>[root<span class="hljs-symbol">@kuangshen</span> home]<span class="hljs-meta"># ls</span><br>mvtest<br><br><br></code></pre></td></tr></table></figure><h2 id="3-文件操作"><a href="#3-文件操作" class="headerlink" title="3.文件操作"></a>3.文件操作</h2><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/dir.png" alt="目录"></p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/dirmod.png" alt="文件权限"></p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/mod.png" alt="权限"></p><h4 id="chgrp-R-root-www-将www所在目录及其子文件的所属组改为root-R-表示所在目录及其子文件"><a href="#chgrp-R-root-www-将www所在目录及其子文件的所属组改为root-R-表示所在目录及其子文件" class="headerlink" title="chgrp -R root www    将www所在目录及其子文件的所属组改为root   -R  表示所在目录及其子文件"></a>chgrp -R root www    将www所在目录及其子文件的所属组改为root   -R  表示所在目录及其子文件</h4><h4 id="chown-R-root-www-将www所在目录及其子文件的所有者改为root"><a href="#chown-R-root-www-将www所在目录及其子文件的所有者改为root" class="headerlink" title="chown -R root www   将www所在目录及其子文件的所有者改为root"></a>chown -R root www   将www所在目录及其子文件的所有者改为root</h4><h4 id="chmod-更改文件权限"><a href="#chmod-更改文件权限" class="headerlink" title="chmod  更改文件权限"></a>chmod  更改文件权限</h4><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/setmod.png" alt="权限设置"></p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/filecheck.png" alt="文件查看"></p><p><strong>网络配置目录</strong></p><p>cd /etc/sysconfig/network-scripts</p><p><strong>查看网络配置</strong></p><h4 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h4><p>cat  / tac  正/反 查看文件内容</p><p>nl  查看行号</p><p>ifconfig</p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/nl.png" alt="查看文件内容带行号"></p><p>more命令  一页一页显示文件内容 (空格进行翻页, enter代表向下翻一行 :f 行号, </p><p>退出 q命令 , /xxx 向下查找字符串 , ?xxxx 向上查找, n代表继续搜寻下一个, N代表向上查找上一个</p><p>)</p><p>less比more增加了向前翻动页面  使用上下键</p><p>head 只看头几行  head -n 20 xxxx.xx 通过 -n参数来控制行数</p><p>tail 只看尾巴几行</p><h2 id="4-硬链接和软连接"><a href="#4-硬链接和软连接" class="headerlink" title="4.硬链接和软连接"></a>4.硬链接和软连接</h2><h3 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h3><p>A —&gt; B     B 是A的一个硬链接, A被删除,A仍能访问B的内容, A的内容改变,B的内容也会跟着改变, 允许一个文件拥有多个路径,防止误删~         <font color="red"><strong>硬链接创建的是文件</strong></font></p><h3 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h3><p>相当于超链接,当源文件被删除后,不能再访问</p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><blockquote><p><strong>ln</strong>  创建连接</p></blockquote><ul><li><p>使用  touch 命令创建文件</p><p>例如: 创建一个文件 f1</p><p>touch f1</p></li><li><p>给f1创建一个硬链接f2</p><p>ln f1 f2  (f1,f2内容相同, f1内容改变,f2也会变,f1被删除,f2仍能显示f1的内容)</p></li><li><p>给f1创建一个软连接(类似于超链接)</p><p><font color="red"><strong>f1,f2是实体文件,f3类似于一个超链接,不是文件</strong></font>&gt;</p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/link.png" alt="创建连接"></p></li><li><p>给f1源文件输入字符串</p><p>echo “xxx” &gt;&gt;f1</p><p><strong>可以发现f2,f3中都显示了f1中的内容</strong></p></li></ul><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/write.png" alt="输入内容"></p><p><strong>尝试删除份f1</strong></p><p>rm -rf f1   (-rf表示递归强制删除)</p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/rmf1.png" alt="删除f1"></p><p><font color="red"><strong>由图中可以看出,删除f1后,f3的软连接失效,而f2依旧存在</strong></font></p><p>而输入  cat f3 则报错, 说明软连接失效~~</p><p><font color="red"><strong>因此备份文件可以通过创建硬链接来实现</strong></font></p><h2 id="5-vim编辑器"><a href="#5-vim编辑器" class="headerlink" title="5.vim编辑器"></a>5.vim编辑器</h2><h3 id="三种模式-命令模式-输入模式-底线命令模式"><a href="#三种模式-命令模式-输入模式-底线命令模式" class="headerlink" title="三种模式: 命令模式, 输入模式, 底线命令模式"></a><font color="red">三种模式: 命令模式, 输入模式, 底线命令模式</font></h3><p>vim  xxxx</p><p>进入vim编辑器后,默认是命令模式</p><ul><li><p>输入 <strong>i</strong>,切换到输入模式</p></li><li><p>输入 <strong>x</strong>,删除当前光标所在的字符</p></li><li><p>输入 <strong>:</strong>     , 进入底线命令模式,输入<font color="red"><strong>wq</strong></font>  保存退出. </p><p>​            如果是输入模式要进入底线命令模式进行保存退出, 首先按ESC,退出输入模式,在输入wq. </p></li></ul><p><font color="red"><strong>快捷方式:</strong></font></p><p>底线命令模式:  :w  保存    :q退出  :w!强制保存 :q!强制退出  :set nu 显示行号</p><h2 id="6-用户管理"><a href="#6-用户管理" class="headerlink" title="6.用户管理"></a>6.用户管理</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>useradd 选项 用户名</p><p>useradd -m lyc</p><p>-m : 表示自动创建这个用户的主目录,  比如这条语句执行后  会在home 目录下生成  lyc的文件夹,  所有有关lyc的文件都会存放在该目录</p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/params.png" alt="参数说明"></p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/useradd.png" alt="创建用户"></p><p><font color="red"><strong>linux中,一切皆是文件,所以创建用户,就是创建文件来保存用户信息</strong></font></p><p>/etc/passwd中有用户的密码信息</p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/passwd.png" alt="密码信息"></p><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>userdel -r 用户名</p><p>userdel -r lyc</p><h3 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a>修改用户</h3><p>usermod</p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/params.png" alt="参数说明"></p><p>usermod -d /home/233 lyc</p><p>修改完成后查看配置文件即可</p><h3 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h3><h4 id="su-用户名"><a href="#su-用户名" class="headerlink" title="su 用户名"></a>su 用户名</h4><p>切换到lyc用户 :   su lyc </p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/root.png" alt="root用户"></p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/others.png" alt="其他用户"></p><p>切换完成后,使用 <strong>exit</strong>退回root用户目录</p><h4 id="查看主机名-hostname"><a href="#查看主机名-hostname" class="headerlink" title="查看主机名  hostname"></a>查看主机名  hostname</h4><p>修改主机名为duedne :  hostname duende 修改完成重新连接即可</p><h4 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h4><p>passwd lyc   —-修改lyc的密码</p><p><img src="/2021/06/12/linux%E6%80%BB%E7%BB%93/changepasswd.png" alt="修改密码"></p><p>超级用户可以修改任何人的密码</p><p>普通用户只能修改自己的密码</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git总结</title>
    <link href="/2021/06/12/git%E6%80%BB%E7%BB%93/"/>
    <url>/2021/06/12/git%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<hr><p>git一些常用的操作命令~~~</p><span id="more"></span><h3 id="one-基本命令"><a href="#one-基本命令" class="headerlink" title="one. 基本命令"></a>one. 基本命令</h3><ol><li><p>​    <strong>git config -l</strong></p><p><img src="/2021/06/12/git%E6%80%BB%E7%BB%93/git-config-l.png" alt="git基本命令"></p><p>查看所有的配置</p></li><li><p>  <strong>git conifg –system –list</strong></p></li></ol><p>   查看系统配置</p><ol start="3"><li> <strong>git config –global –list</strong> </li></ol><p>   查看本地配置</p><p>   git config – global user.name    配置用户名</p><p>   git config – global user.email     配置密码</p><p>   (PS: 用户名和密码是必须要配置的)</p><h3 id="two-基本原理"><a href="#two-基本原理" class="headerlink" title="two. 基本原理"></a>two. 基本原理</h3><p><img src="/2021/06/12/git%E6%80%BB%E7%BB%93/gitcore.png" alt="git原理"></p><h5 id="Remote-Directory-远程仓库"><a href="#Remote-Directory-远程仓库" class="headerlink" title="Remote Directory:   远程仓库"></a>Remote Directory:   远程仓库</h5><h5 id="History-Repository-本地仓库"><a href="#History-Repository-本地仓库" class="headerlink" title="History(Repository):  本地仓库"></a>History(Repository):  本地仓库</h5><h5 id="Stage-Index-暂存区"><a href="#Stage-Index-暂存区" class="headerlink" title="Stage(Index):  暂存区"></a>Stage(Index):  暂存区</h5><h5 id="Working-Directory-工作区"><a href="#Working-Directory-工作区" class="headerlink" title="Working Directory: 工作区"></a>Working Directory: 工作区</h5><h5 id="流程"><a href="#流程" class="headerlink" title="流程:"></a>流程:</h5><h5 id="工作区-gt-git-add-gt-暂存区-gt-git-commit-gt-本地仓库-gt-git-push"><a href="#工作区-gt-git-add-gt-暂存区-gt-git-commit-gt-本地仓库-gt-git-push" class="headerlink" title="工作区 -&gt; git add -&gt; 暂存区 -&gt; git commit -&gt; 本地仓库 -&gt; git push"></a>工作区 -&gt; git add -&gt; 暂存区 -&gt; git commit -&gt; 本地仓库 -&gt; git push</h5><h5 id="gt-远程仓库"><a href="#gt-远程仓库" class="headerlink" title="-&gt; 远程仓库"></a>-&gt; 远程仓库</h5><hr><h3 id="three-操作命令"><a href="#three-操作命令" class="headerlink" title="three.操作命令"></a>three.操作命令</h3><ul><li><p>生成git项目 {</p><p>​                            I.    git init   (自己生成)</p><p>​                            II.  git clone  [url]   (克隆远程git项目)</p></li><li><p><img src="/2021/06/12/git%E6%80%BB%E7%BB%93/gitstatus.png" alt="查看文件状态"></p><p> 查看文件状态</p></li><li><p>git add .  添加所有文件到暂存区   </p><p>git  rm   取消添加到暂存区</p></li><li><p>git commit -m “msg”   将暂存区内容添加到本地仓库</p><p>git check out 取消添加到本地仓库</p></li><li><p>git push -u origin main 提交到远程仓库</p></li><li><p><img src="/2021/06/12/git%E6%80%BB%E7%BB%93/gitignore1.png" alt="忽略文件"></p><p><img src="/2021/06/12/git%E6%80%BB%E7%BB%93/gitignore2.png" alt="常用设置"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#为注释 *.txt       </span><br><span class="hljs-comment">#忽略所有 .txt结尾的文件,这样的话上传就不会被选中！</span><br>!lib.txt     <span class="hljs-comment">#但lib.txt除外</span><br>/temp        <span class="hljs-comment">#仅忽略项目根目录下的TODO文件,不包括其它目录temp</span><br>build<span class="hljs-regexp">/       #忽略build/</span>目录下的所有文件<br>doc<span class="hljs-regexp">/*.txt    #会忽略 doc/</span>notes.txt 但不包括 doc<span class="hljs-regexp">/server/</span>arch.txt<br></code></pre></td></tr></table></figure><h3 id="four-IDEA集成Git"><a href="#four-IDEA集成Git" class="headerlink" title="four.IDEA集成Git"></a>four.IDEA集成Git</h3><ul><li>将远程仓库中的git项目拷贝到目录即可</li></ul><h3 id="five-Git分支"><a href="#five-Git分支" class="headerlink" title="five.Git分支"></a>five.Git分支</h3><p>列出所有本地分支                    git branch<br>列出所有远程分支                    git branch -r<br>新建一个分支，但依然停留在当前分支     git branch [branch-name]<br>新建一个分支，并切换到该分支          git checkout -b [branch]<br>合并指定分支到当前分支               git merge [branch]<br>删除分支                             git branch -d [branch-name]<br>删除远程分支  git push origin –delete [branch-name]</p><p>​                        git branch -dr [remote/branch]</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于6月的规划</title>
    <link href="/2021/06/12/%E5%85%B3%E4%BA%8E6%E6%9C%88%E7%9A%84%E8%A7%84%E5%88%92/"/>
    <url>/2021/06/12/%E5%85%B3%E4%BA%8E6%E6%9C%88%E7%9A%84%E8%A7%84%E5%88%92/</url>
    
    <content type="html"><![CDATA[<hr><p>关于今年6月的一些规划和学习目标~~~~</p><span id="more"></span><hr><h3 id="一-工作方面"><a href="#一-工作方面" class="headerlink" title="一. 工作方面"></a>一. 工作方面</h3><pre><code>    1. 加强面试, 锻炼技巧,找到一份真正合适的工作    2. 谈薪~</code></pre><p>​        </p><h3 id="二-学习方面"><a href="#二-学习方面" class="headerlink" title="二. 学习方面"></a>二. 学习方面</h3><pre><code>    1. java基础学习巩固    2. linux入门    3. leetcode 刷题    4. 自己写一个小项目 (Springboot + Vue)</code></pre><hr><h3 id="三-生活方面"><a href="#三-生活方面" class="headerlink" title="三.生活方面"></a>三.生活方面</h3><pre><code>        1. 早睡早起,不熬夜        2. 每天吃早饭!</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>短期规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人博客的搭建(Hexo)</title>
    <link href="/2021/06/08/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <url>/2021/06/08/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>简单介绍hexo的安装及基本操作</p><span id="more"></span><h2 id="Step-one-安装"><a href="#Step-one-安装" class="headerlink" title="Step one. 安装"></a>Step one. 安装</h2><p>1.首先安装hexo   cnpm install -g hexo-cli  (node.js)</p><p>2.mkdir blog  创建文件夹</p><p>3.执行hexo init </p><p>4.启动博客 hexo s (hexo start)</p><hr><h2 id="Step-two-新建文章"><a href="#Step-two-新建文章" class="headerlink" title="Step two. 新建文章"></a>Step two. 新建文章</h2><p>使用  hexo new “xxx” 命令</p><p>写完文章后</p><p>hexo clean  </p><p>hexo g –生成</p>]]></content>
    
    
    
    <tags>
      
      <tag>博客搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
